# Generated from SmtLib25.g4 by ANTLR 4.5.1
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2\"")
        buf.write("\u014f\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\3\2\3")
        buf.write("\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2")
        buf.write("\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3")
        buf.write("\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\7\3\7")
        buf.write("\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3")
        buf.write("\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3\t\3\t")
        buf.write("\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3")
        buf.write("\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f\3\f\3")
        buf.write("\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\r\3\r")
        buf.write("\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22\3\22")
        buf.write("\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\27\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\30\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33")
        buf.write("\3\33\3\33\3\33\3\34\3\34\3\34\7\34\u0114\n\34\f\34\16")
        buf.write("\34\u0117\13\34\5\34\u0119\n\34\3\35\3\35\3\35\3\35\3")
        buf.write("\35\3\35\3\35\3\35\3\35\5\35\u0124\n\35\3\36\3\36\3\36")
        buf.write("\7\36\u0129\n\36\f\36\16\36\u012c\13\36\3\36\3\36\3\37")
        buf.write("\3\37\3\37\3 \3 \5 \u0135\n \3!\3!\7!\u0139\n!\f!\16!")
        buf.write("\u013c\13!\3\"\3\"\6\"\u0140\n\"\r\"\16\"\u0141\3\"\3")
        buf.write("\"\3#\3#\3#\3$\6$\u014a\n$\r$\16$\u014b\3$\3$\3\u012a")
        buf.write("\2%\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r")
        buf.write("\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30")
        buf.write("/\31\61\32\63\33\65\34\67\359\36;\37=\2? A\2C\2E!G\"\3")
        buf.write("\2\b\3\2\63;\3\2\62;\n\2##&(,-/\61>\\`ac|\u0080\u0080")
        buf.write("\n\2##&(,-/;>\\`ac|\u0080\u0080\4\2^^~~\5\2\13\f\17\17")
        buf.write("\"\"\u0154\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2")
        buf.write("\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2")
        buf.write("\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2")
        buf.write("\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#")
        buf.write("\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2")
        buf.write("\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65")
        buf.write("\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2?\3\2\2\2")
        buf.write("\2E\3\2\2\2\2G\3\2\2\2\3I\3\2\2\2\5Y\3\2\2\2\7f\3\2\2")
        buf.write("\2\th\3\2\2\2\13o\3\2\2\2\rq\3\2\2\2\17{\3\2\2\2\21\u0089")
        buf.write("\3\2\2\2\23\u0095\3\2\2\2\25\u00a0\3\2\2\2\27\u00a5\3")
        buf.write("\2\2\2\31\u00af\3\2\2\2\33\u00b9\3\2\2\2\35\u00c2\3\2")
        buf.write("\2\2\37\u00cd\3\2\2\2!\u00cf\3\2\2\2#\u00d2\3\2\2\2%\u00d6")
        buf.write("\3\2\2\2\'\u00dd\3\2\2\2)\u00e4\3\2\2\2+\u00e6\3\2\2\2")
        buf.write("-\u00ec\3\2\2\2/\u00f1\3\2\2\2\61\u00f8\3\2\2\2\63\u0101")
        buf.write("\3\2\2\2\65\u010a\3\2\2\2\67\u0118\3\2\2\29\u0123\3\2")
        buf.write("\2\2;\u0125\3\2\2\2=\u012f\3\2\2\2?\u0134\3\2\2\2A\u0136")
        buf.write("\3\2\2\2C\u013d\3\2\2\2E\u0145\3\2\2\2G\u0149\3\2\2\2")
        buf.write("IJ\7<\2\2JK\7r\2\2KL\7t\2\2LM\7q\2\2MN\7f\2\2NO\7w\2\2")
        buf.write("OP\7e\2\2PQ\7g\2\2QR\7/\2\2RS\7o\2\2ST\7q\2\2TU\7f\2\2")
        buf.write("UV\7g\2\2VW\7n\2\2WX\7u\2\2X\4\3\2\2\2YZ\7<\2\2Z[\7c\2")
        buf.write("\2[\\\7w\2\2\\]\7v\2\2]^\7q\2\2^_\7/\2\2_`\7e\2\2`a\7")
        buf.write("q\2\2ab\7p\2\2bc\7h\2\2cd\7k\2\2de\7i\2\2e\6\3\2\2\2f")
        buf.write("g\7*\2\2g\b\3\2\2\2hi\7c\2\2ij\7u\2\2jk\7u\2\2kl\7g\2")
        buf.write("\2lm\7t\2\2mn\7v\2\2n\n\3\2\2\2op\7+\2\2p\f\3\2\2\2qr")
        buf.write("\7e\2\2rs\7j\2\2st\7g\2\2tu\7e\2\2uv\7m\2\2vw\7/\2\2w")
        buf.write("x\7u\2\2xy\7c\2\2yz\7v\2\2z\16\3\2\2\2{|\7f\2\2|}\7g\2")
        buf.write("\2}~\7e\2\2~\177\7n\2\2\177\u0080\7c\2\2\u0080\u0081\7")
        buf.write("t\2\2\u0081\u0082\7g\2\2\u0082\u0083\7/\2\2\u0083\u0084")
        buf.write("\7e\2\2\u0084\u0085\7q\2\2\u0085\u0086\7p\2\2\u0086\u0087")
        buf.write("\7u\2\2\u0087\u0088\7v\2\2\u0088\20\3\2\2\2\u0089\u008a")
        buf.write("\7f\2\2\u008a\u008b\7g\2\2\u008b\u008c\7e\2\2\u008c\u008d")
        buf.write("\7n\2\2\u008d\u008e\7c\2\2\u008e\u008f\7t\2\2\u008f\u0090")
        buf.write("\7g\2\2\u0090\u0091\7/\2\2\u0091\u0092\7h\2\2\u0092\u0093")
        buf.write("\7w\2\2\u0093\u0094\7p\2\2\u0094\22\3\2\2\2\u0095\u0096")
        buf.write("\7f\2\2\u0096\u0097\7g\2\2\u0097\u0098\7h\2\2\u0098\u0099")
        buf.write("\7k\2\2\u0099\u009a\7p\2\2\u009a\u009b\7g\2\2\u009b\u009c")
        buf.write("\7/\2\2\u009c\u009d\7h\2\2\u009d\u009e\7w\2\2\u009e\u009f")
        buf.write("\7p\2\2\u009f\24\3\2\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2")
        buf.write("\7z\2\2\u00a2\u00a3\7k\2\2\u00a3\u00a4\7v\2\2\u00a4\26")
        buf.write("\3\2\2\2\u00a5\u00a6\7i\2\2\u00a6\u00a7\7g\2\2\u00a7\u00a8")
        buf.write("\7v\2\2\u00a8\u00a9\7/\2\2\u00a9\u00aa\7o\2\2\u00aa\u00ab")
        buf.write("\7q\2\2\u00ab\u00ac\7f\2\2\u00ac\u00ad\7g\2\2\u00ad\u00ae")
        buf.write("\7n\2\2\u00ae\30\3\2\2\2\u00af\u00b0\7u\2\2\u00b0\u00b1")
        buf.write("\7g\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3\7/\2\2\u00b3\u00b4")
        buf.write("\7n\2\2\u00b4\u00b5\7q\2\2\u00b5\u00b6\7i\2\2\u00b6\u00b7")
        buf.write("\7k\2\2\u00b7\u00b8\7e\2\2\u00b8\32\3\2\2\2\u00b9\u00ba")
        buf.write("\7u\2\2\u00ba\u00bb\7g\2\2\u00bb\u00bc\7v\2\2\u00bc\u00bd")
        buf.write("\7/\2\2\u00bd\u00be\7k\2\2\u00be\u00bf\7p\2\2\u00bf\u00c0")
        buf.write("\7h\2\2\u00c0\u00c1\7q\2\2\u00c1\34\3\2\2\2\u00c2\u00c3")
        buf.write("\7u\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7v\2\2\u00c5\u00c6")
        buf.write("\7/\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7r\2\2\u00c8\u00c9")
        buf.write("\7v\2\2\u00c9\u00ca\7k\2\2\u00ca\u00cb\7q\2\2\u00cb\u00cc")
        buf.write("\7p\2\2\u00cc\36\3\2\2\2\u00cd\u00ce\7a\2\2\u00ce \3\2")
        buf.write("\2\2\u00cf\u00d0\7c\2\2\u00d0\u00d1\7u\2\2\u00d1\"\3\2")
        buf.write("\2\2\u00d2\u00d3\7n\2\2\u00d3\u00d4\7g\2\2\u00d4\u00d5")
        buf.write("\7v\2\2\u00d5$\3\2\2\2\u00d6\u00d7\7h\2\2\u00d7\u00d8")
        buf.write("\7q\2\2\u00d8\u00d9\7t\2\2\u00d9\u00da\7c\2\2\u00da\u00db")
        buf.write("\7n\2\2\u00db\u00dc\7n\2\2\u00dc&\3\2\2\2\u00dd\u00de")
        buf.write("\7g\2\2\u00de\u00df\7z\2\2\u00df\u00e0\7k\2\2\u00e0\u00e1")
        buf.write("\7u\2\2\u00e1\u00e2\7v\2\2\u00e2\u00e3\7u\2\2\u00e3(\3")
        buf.write("\2\2\2\u00e4\u00e5\7#\2\2\u00e5*\3\2\2\2\u00e6\u00e7\7")
        buf.write("g\2\2\u00e7\u00e8\7t\2\2\u00e8\u00e9\7t\2\2\u00e9\u00ea")
        buf.write("\7q\2\2\u00ea\u00eb\7t\2\2\u00eb,\3\2\2\2\u00ec\u00ed")
        buf.write("\7u\2\2\u00ed\u00ee\7c\2\2\u00ee\u00ef\7v\2\2\u00ef\u00f0")
        buf.write("\7\f\2\2\u00f0.\3\2\2\2\u00f1\u00f2\7w\2\2\u00f2\u00f3")
        buf.write("\7p\2\2\u00f3\u00f4\7u\2\2\u00f4\u00f5\7c\2\2\u00f5\u00f6")
        buf.write("\7v\2\2\u00f6\u00f7\7\f\2\2\u00f7\60\3\2\2\2\u00f8\u00f9")
        buf.write("\7v\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc")
        buf.write("\7g\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7w\2\2\u00fe\u00ff")
        buf.write("\7v\2\2\u00ff\u0100\7\f\2\2\u0100\62\3\2\2\2\u0101\u0102")
        buf.write("\7w\2\2\u0102\u0103\7p\2\2\u0103\u0104\7m\2\2\u0104\u0105")
        buf.write("\7p\2\2\u0105\u0106\7q\2\2\u0106\u0107\7y\2\2\u0107\u0108")
        buf.write("\7p\2\2\u0108\u0109\7\f\2\2\u0109\64\3\2\2\2\u010a\u010b")
        buf.write("\7o\2\2\u010b\u010c\7q\2\2\u010c\u010d\7f\2\2\u010d\u010e")
        buf.write("\7g\2\2\u010e\u010f\7n\2\2\u010f\66\3\2\2\2\u0110\u0119")
        buf.write("\7\62\2\2\u0111\u0115\t\2\2\2\u0112\u0114\t\3\2\2\u0113")
        buf.write("\u0112\3\2\2\2\u0114\u0117\3\2\2\2\u0115\u0113\3\2\2\2")
        buf.write("\u0115\u0116\3\2\2\2\u0116\u0119\3\2\2\2\u0117\u0115\3")
        buf.write("\2\2\2\u0118\u0110\3\2\2\2\u0118\u0111\3\2\2\2\u01198")
        buf.write("\3\2\2\2\u011a\u011b\7v\2\2\u011b\u011c\7t\2\2\u011c\u011d")
        buf.write("\7w\2\2\u011d\u0124\7g\2\2\u011e\u011f\7h\2\2\u011f\u0120")
        buf.write("\7c\2\2\u0120\u0121\7n\2\2\u0121\u0122\7u\2\2\u0122\u0124")
        buf.write("\7g\2\2\u0123\u011a\3\2\2\2\u0123\u011e\3\2\2\2\u0124")
        buf.write(":\3\2\2\2\u0125\u012a\7$\2\2\u0126\u0129\5=\37\2\u0127")
        buf.write("\u0129\13\2\2\2\u0128\u0126\3\2\2\2\u0128\u0127\3\2\2")
        buf.write("\2\u0129\u012c\3\2\2\2\u012a\u012b\3\2\2\2\u012a\u0128")
        buf.write("\3\2\2\2\u012b\u012d\3\2\2\2\u012c\u012a\3\2\2\2\u012d")
        buf.write("\u012e\7$\2\2\u012e<\3\2\2\2\u012f\u0130\7$\2\2\u0130")
        buf.write("\u0131\7$\2\2\u0131>\3\2\2\2\u0132\u0135\5A!\2\u0133\u0135")
        buf.write("\5C\"\2\u0134\u0132\3\2\2\2\u0134\u0133\3\2\2\2\u0135")
        buf.write("@\3\2\2\2\u0136\u013a\t\4\2\2\u0137\u0139\t\5\2\2\u0138")
        buf.write("\u0137\3\2\2\2\u0139\u013c\3\2\2\2\u013a\u0138\3\2\2\2")
        buf.write("\u013a\u013b\3\2\2\2\u013bB\3\2\2\2\u013c\u013a\3\2\2")
        buf.write("\2\u013d\u013f\7~\2\2\u013e\u0140\n\6\2\2\u013f\u013e")
        buf.write("\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u013f\3\2\2\2\u0141")
        buf.write("\u0142\3\2\2\2\u0142\u0143\3\2\2\2\u0143\u0144\7~\2\2")
        buf.write("\u0144D\3\2\2\2\u0145\u0146\7<\2\2\u0146\u0147\5A!\2\u0147")
        buf.write("F\3\2\2\2\u0148\u014a\t\7\2\2\u0149\u0148\3\2\2\2\u014a")
        buf.write("\u014b\3\2\2\2\u014b\u0149\3\2\2\2\u014b\u014c\3\2\2\2")
        buf.write("\u014c\u014d\3\2\2\2\u014d\u014e\b$\2\2\u014eH\3\2\2\2")
        buf.write("\f\2\u0115\u0118\u0123\u0128\u012a\u0134\u013a\u0141\u014b")
        buf.write("\3\b\2\2")
        return buf.getvalue()


class SmtLib25Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    INTEGER = 27
    B_VALUE = 28
    STRINGCONSTANT = 29
    SYMBOL = 30
    KEYWORD = 31
    WS = 32

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':produce-models'", "':auto-config'", "'('", "'assert'", "')'", 
            "'check-sat'", "'declare-const'", "'declare-fun'", "'define-fun'", 
            "'exit'", "'get-model'", "'set-logic'", "'set-info'", "'set-option'", 
            "'_'", "'as'", "'let'", "'forall'", "'exists'", "'!'", "'error'", 
            "'sat\n'", "'unsat\n'", "'timeout\n'", "'unknown\n'", "'model'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "B_VALUE", "STRINGCONSTANT", "SYMBOL", "KEYWORD", 
            "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "INTEGER", "B_VALUE", "STRINGCONSTANT", "QUOTEESCAPE", 
                  "SYMBOL", "SIMPLE_SYMBOL", "COMPLEX_SYMBOL", "KEYWORD", 
                  "WS" ]

    grammarFileName = "SmtLib25.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


