# Generated from SmtLib25.g4 by ANTLR 4.5.1
from antlr4 import *
from io import StringIO


def serializedATN():
    with StringIO() as buf:
        buf.write("\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2#")
        buf.write("\u0156\b\1\4\2\t\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7")
        buf.write("\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13\t\13\4\f\t\f\4\r\t\r")
        buf.write("\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22\4\23")
        buf.write("\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30")
        buf.write("\4\31\t\31\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36")
        buf.write("\t\36\4\37\t\37\4 \t \4!\t!\4\"\t\"\4#\t#\4$\t$\4%\t%")
        buf.write("\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3")
        buf.write("\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3\3")
        buf.write("\3\3\3\3\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3")
        buf.write("\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b")
        buf.write("\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3\t\3")
        buf.write("\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n")
        buf.write("\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\13\3\13\3\13\3\f")
        buf.write("\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3")
        buf.write("\r\3\r\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3\16\3\16\3\16\3")
        buf.write("\16\3\16\3\16\3\17\3\17\3\17\3\17\3\17\3\17\3\17\3\17")
        buf.write("\3\17\3\17\3\17\3\20\3\20\3\21\3\21\3\21\3\22\3\22\3\22")
        buf.write("\3\22\3\23\3\23\3\23\3\23\3\23\3\23\3\23\3\24\3\24\3\24")
        buf.write("\3\24\3\24\3\24\3\24\3\25\3\25\3\26\3\26\3\26\3\26\3\26")
        buf.write("\3\26\3\27\3\27\3\27\3\27\3\30\3\30\3\30\3\30\3\30\3\30")
        buf.write("\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\31\3\32\3\32\3\32")
        buf.write("\3\32\3\32\3\32\3\32\3\32\3\33\3\33\3\33\3\33\3\33\3\33")
        buf.write("\3\34\3\34\3\34\7\34\u0112\n\34\f\34\16\34\u0115\13\34")
        buf.write("\5\34\u0117\n\34\3\35\3\35\3\35\3\35\3\35\3\35\3\35\3")
        buf.write("\35\3\35\5\35\u0122\n\35\3\36\3\36\3\36\7\36\u0127\n\36")
        buf.write("\f\36\16\36\u012a\13\36\3\36\3\36\3\37\3\37\3\37\3 \3")
        buf.write(" \5 \u0133\n \3!\3!\7!\u0137\n!\f!\16!\u013a\13!\3\"\3")
        buf.write("\"\6\"\u013e\n\"\r\"\16\"\u013f\3\"\3\"\3#\3#\3#\3$\3")
        buf.write("$\7$\u0149\n$\f$\16$\u014c\13$\3$\3$\3%\6%\u0151\n%\r")
        buf.write("%\16%\u0152\3%\3%\2\2&\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21")
        buf.write("\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24")
        buf.write("\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37")
        buf.write("=\2? A\2C\2E!G\"I#\3\2\n\3\2\63;\3\2\62;\3\2$$\n\2##&")
        buf.write("(,-/\61>\\`ac|\u0080\u0080\n\2##&(,-/;>\\`ac|\u0080\u0080")
        buf.write("\4\2^^~~\4\2\f\f\17\17\5\2\13\f\17\17\"\"\u015c\2\3\3")
        buf.write("\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2")
        buf.write("\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2")
        buf.write("\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2")
        buf.write("\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2")
        buf.write("\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3")
        buf.write("\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2")
        buf.write("\2\2\29\3\2\2\2\2;\3\2\2\2\2?\3\2\2\2\2E\3\2\2\2\2G\3")
        buf.write("\2\2\2\2I\3\2\2\2\3K\3\2\2\2\5[\3\2\2\2\7h\3\2\2\2\tj")
        buf.write("\3\2\2\2\13q\3\2\2\2\rs\3\2\2\2\17}\3\2\2\2\21\u008b\3")
        buf.write("\2\2\2\23\u0097\3\2\2\2\25\u00a2\3\2\2\2\27\u00a7\3\2")
        buf.write("\2\2\31\u00b1\3\2\2\2\33\u00bb\3\2\2\2\35\u00c4\3\2\2")
        buf.write("\2\37\u00cf\3\2\2\2!\u00d1\3\2\2\2#\u00d4\3\2\2\2%\u00d8")
        buf.write("\3\2\2\2\'\u00df\3\2\2\2)\u00e6\3\2\2\2+\u00e8\3\2\2\2")
        buf.write("-\u00ee\3\2\2\2/\u00f2\3\2\2\2\61\u00f8\3\2\2\2\63\u0100")
        buf.write("\3\2\2\2\65\u0108\3\2\2\2\67\u0116\3\2\2\29\u0121\3\2")
        buf.write("\2\2;\u0123\3\2\2\2=\u012d\3\2\2\2?\u0132\3\2\2\2A\u0134")
        buf.write("\3\2\2\2C\u013b\3\2\2\2E\u0143\3\2\2\2G\u0146\3\2\2\2")
        buf.write("I\u0150\3\2\2\2KL\7<\2\2LM\7r\2\2MN\7t\2\2NO\7q\2\2OP")
        buf.write("\7f\2\2PQ\7w\2\2QR\7e\2\2RS\7g\2\2ST\7/\2\2TU\7o\2\2U")
        buf.write("V\7q\2\2VW\7f\2\2WX\7g\2\2XY\7n\2\2YZ\7u\2\2Z\4\3\2\2")
        buf.write("\2[\\\7<\2\2\\]\7c\2\2]^\7w\2\2^_\7v\2\2_`\7q\2\2`a\7")
        buf.write("/\2\2ab\7e\2\2bc\7q\2\2cd\7p\2\2de\7h\2\2ef\7k\2\2fg\7")
        buf.write("i\2\2g\6\3\2\2\2hi\7*\2\2i\b\3\2\2\2jk\7c\2\2kl\7u\2\2")
        buf.write("lm\7u\2\2mn\7g\2\2no\7t\2\2op\7v\2\2p\n\3\2\2\2qr\7+\2")
        buf.write("\2r\f\3\2\2\2st\7e\2\2tu\7j\2\2uv\7g\2\2vw\7e\2\2wx\7")
        buf.write("m\2\2xy\7/\2\2yz\7u\2\2z{\7c\2\2{|\7v\2\2|\16\3\2\2\2")
        buf.write("}~\7f\2\2~\177\7g\2\2\177\u0080\7e\2\2\u0080\u0081\7n")
        buf.write("\2\2\u0081\u0082\7c\2\2\u0082\u0083\7t\2\2\u0083\u0084")
        buf.write("\7g\2\2\u0084\u0085\7/\2\2\u0085\u0086\7e\2\2\u0086\u0087")
        buf.write("\7q\2\2\u0087\u0088\7p\2\2\u0088\u0089\7u\2\2\u0089\u008a")
        buf.write("\7v\2\2\u008a\20\3\2\2\2\u008b\u008c\7f\2\2\u008c\u008d")
        buf.write("\7g\2\2\u008d\u008e\7e\2\2\u008e\u008f\7n\2\2\u008f\u0090")
        buf.write("\7c\2\2\u0090\u0091\7t\2\2\u0091\u0092\7g\2\2\u0092\u0093")
        buf.write("\7/\2\2\u0093\u0094\7h\2\2\u0094\u0095\7w\2\2\u0095\u0096")
        buf.write("\7p\2\2\u0096\22\3\2\2\2\u0097\u0098\7f\2\2\u0098\u0099")
        buf.write("\7g\2\2\u0099\u009a\7h\2\2\u009a\u009b\7k\2\2\u009b\u009c")
        buf.write("\7p\2\2\u009c\u009d\7g\2\2\u009d\u009e\7/\2\2\u009e\u009f")
        buf.write("\7h\2\2\u009f\u00a0\7w\2\2\u00a0\u00a1\7p\2\2\u00a1\24")
        buf.write("\3\2\2\2\u00a2\u00a3\7g\2\2\u00a3\u00a4\7z\2\2\u00a4\u00a5")
        buf.write("\7k\2\2\u00a5\u00a6\7v\2\2\u00a6\26\3\2\2\2\u00a7\u00a8")
        buf.write("\7i\2\2\u00a8\u00a9\7g\2\2\u00a9\u00aa\7v\2\2\u00aa\u00ab")
        buf.write("\7/\2\2\u00ab\u00ac\7o\2\2\u00ac\u00ad\7q\2\2\u00ad\u00ae")
        buf.write("\7f\2\2\u00ae\u00af\7g\2\2\u00af\u00b0\7n\2\2\u00b0\30")
        buf.write("\3\2\2\2\u00b1\u00b2\7u\2\2\u00b2\u00b3\7g\2\2\u00b3\u00b4")
        buf.write("\7v\2\2\u00b4\u00b5\7/\2\2\u00b5\u00b6\7n\2\2\u00b6\u00b7")
        buf.write("\7q\2\2\u00b7\u00b8\7i\2\2\u00b8\u00b9\7k\2\2\u00b9\u00ba")
        buf.write("\7e\2\2\u00ba\32\3\2\2\2\u00bb\u00bc\7u\2\2\u00bc\u00bd")
        buf.write("\7g\2\2\u00bd\u00be\7v\2\2\u00be\u00bf\7/\2\2\u00bf\u00c0")
        buf.write("\7k\2\2\u00c0\u00c1\7p\2\2\u00c1\u00c2\7h\2\2\u00c2\u00c3")
        buf.write("\7q\2\2\u00c3\34\3\2\2\2\u00c4\u00c5\7u\2\2\u00c5\u00c6")
        buf.write("\7g\2\2\u00c6\u00c7\7v\2\2\u00c7\u00c8\7/\2\2\u00c8\u00c9")
        buf.write("\7q\2\2\u00c9\u00ca\7r\2\2\u00ca\u00cb\7v\2\2\u00cb\u00cc")
        buf.write("\7k\2\2\u00cc\u00cd\7q\2\2\u00cd\u00ce\7p\2\2\u00ce\36")
        buf.write("\3\2\2\2\u00cf\u00d0\7a\2\2\u00d0 \3\2\2\2\u00d1\u00d2")
        buf.write("\7c\2\2\u00d2\u00d3\7u\2\2\u00d3\"\3\2\2\2\u00d4\u00d5")
        buf.write("\7n\2\2\u00d5\u00d6\7g\2\2\u00d6\u00d7\7v\2\2\u00d7$\3")
        buf.write("\2\2\2\u00d8\u00d9\7h\2\2\u00d9\u00da\7q\2\2\u00da\u00db")
        buf.write("\7t\2\2\u00db\u00dc\7c\2\2\u00dc\u00dd\7n\2\2\u00dd\u00de")
        buf.write("\7n\2\2\u00de&\3\2\2\2\u00df\u00e0\7g\2\2\u00e0\u00e1")
        buf.write("\7z\2\2\u00e1\u00e2\7k\2\2\u00e2\u00e3\7u\2\2\u00e3\u00e4")
        buf.write("\7v\2\2\u00e4\u00e5\7u\2\2\u00e5(\3\2\2\2\u00e6\u00e7")
        buf.write("\7#\2\2\u00e7*\3\2\2\2\u00e8\u00e9\7g\2\2\u00e9\u00ea")
        buf.write("\7t\2\2\u00ea\u00eb\7t\2\2\u00eb\u00ec\7q\2\2\u00ec\u00ed")
        buf.write("\7t\2\2\u00ed,\3\2\2\2\u00ee\u00ef\7u\2\2\u00ef\u00f0")
        buf.write("\7c\2\2\u00f0\u00f1\7v\2\2\u00f1.\3\2\2\2\u00f2\u00f3")
        buf.write("\7w\2\2\u00f3\u00f4\7p\2\2\u00f4\u00f5\7u\2\2\u00f5\u00f6")
        buf.write("\7c\2\2\u00f6\u00f7\7v\2\2\u00f7\60\3\2\2\2\u00f8\u00f9")
        buf.write("\7v\2\2\u00f9\u00fa\7k\2\2\u00fa\u00fb\7o\2\2\u00fb\u00fc")
        buf.write("\7g\2\2\u00fc\u00fd\7q\2\2\u00fd\u00fe\7w\2\2\u00fe\u00ff")
        buf.write("\7v\2\2\u00ff\62\3\2\2\2\u0100\u0101\7w\2\2\u0101\u0102")
        buf.write("\7p\2\2\u0102\u0103\7m\2\2\u0103\u0104\7p\2\2\u0104\u0105")
        buf.write("\7q\2\2\u0105\u0106\7y\2\2\u0106\u0107\7p\2\2\u0107\64")
        buf.write("\3\2\2\2\u0108\u0109\7o\2\2\u0109\u010a\7q\2\2\u010a\u010b")
        buf.write("\7f\2\2\u010b\u010c\7g\2\2\u010c\u010d\7n\2\2\u010d\66")
        buf.write("\3\2\2\2\u010e\u0117\7\62\2\2\u010f\u0113\t\2\2\2\u0110")
        buf.write("\u0112\t\3\2\2\u0111\u0110\3\2\2\2\u0112\u0115\3\2\2\2")
        buf.write("\u0113\u0111\3\2\2\2\u0113\u0114\3\2\2\2\u0114\u0117\3")
        buf.write("\2\2\2\u0115\u0113\3\2\2\2\u0116\u010e\3\2\2\2\u0116\u010f")
        buf.write("\3\2\2\2\u01178\3\2\2\2\u0118\u0119\7v\2\2\u0119\u011a")
        buf.write("\7t\2\2\u011a\u011b\7w\2\2\u011b\u0122\7g\2\2\u011c\u011d")
        buf.write("\7h\2\2\u011d\u011e\7c\2\2\u011e\u011f\7n\2\2\u011f\u0120")
        buf.write("\7u\2\2\u0120\u0122\7g\2\2\u0121\u0118\3\2\2\2\u0121\u011c")
        buf.write("\3\2\2\2\u0122:\3\2\2\2\u0123\u0128\7$\2\2\u0124\u0127")
        buf.write("\5=\37\2\u0125\u0127\n\4\2\2\u0126\u0124\3\2\2\2\u0126")
        buf.write("\u0125\3\2\2\2\u0127\u012a\3\2\2\2\u0128\u0126\3\2\2\2")
        buf.write("\u0128\u0129\3\2\2\2\u0129\u012b\3\2\2\2\u012a\u0128\3")
        buf.write("\2\2\2\u012b\u012c\7$\2\2\u012c<\3\2\2\2\u012d\u012e\7")
        buf.write("$\2\2\u012e\u012f\7$\2\2\u012f>\3\2\2\2\u0130\u0133\5")
        buf.write("A!\2\u0131\u0133\5C\"\2\u0132\u0130\3\2\2\2\u0132\u0131")
        buf.write("\3\2\2\2\u0133@\3\2\2\2\u0134\u0138\t\5\2\2\u0135\u0137")
        buf.write("\t\6\2\2\u0136\u0135\3\2\2\2\u0137\u013a\3\2\2\2\u0138")
        buf.write("\u0136\3\2\2\2\u0138\u0139\3\2\2\2\u0139B\3\2\2\2\u013a")
        buf.write("\u0138\3\2\2\2\u013b\u013d\7~\2\2\u013c\u013e\n\7\2\2")
        buf.write("\u013d\u013c\3\2\2\2\u013e\u013f\3\2\2\2\u013f\u013d\3")
        buf.write("\2\2\2\u013f\u0140\3\2\2\2\u0140\u0141\3\2\2\2\u0141\u0142")
        buf.write("\7~\2\2\u0142D\3\2\2\2\u0143\u0144\7<\2\2\u0144\u0145")
        buf.write("\5A!\2\u0145F\3\2\2\2\u0146\u014a\7=\2\2\u0147\u0149\n")
        buf.write("\b\2\2\u0148\u0147\3\2\2\2\u0149\u014c\3\2\2\2\u014a\u0148")
        buf.write("\3\2\2\2\u014a\u014b\3\2\2\2\u014b\u014d\3\2\2\2\u014c")
        buf.write("\u014a\3\2\2\2\u014d\u014e\b$\2\2\u014eH\3\2\2\2\u014f")
        buf.write("\u0151\t\t\2\2\u0150\u014f\3\2\2\2\u0151\u0152\3\2\2\2")
        buf.write("\u0152\u0150\3\2\2\2\u0152\u0153\3\2\2\2\u0153\u0154\3")
        buf.write("\2\2\2\u0154\u0155\b%\2\2\u0155J\3\2\2\2\r\2\u0113\u0116")
        buf.write("\u0121\u0126\u0128\u0132\u0138\u013f\u014a\u0152\3\b\2")
        buf.write("\2")
        return buf.getvalue()


class SmtLib25Lexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]


    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    T__12 = 13
    T__13 = 14
    T__14 = 15
    T__15 = 16
    T__16 = 17
    T__17 = 18
    T__18 = 19
    T__19 = 20
    T__20 = 21
    T__21 = 22
    T__22 = 23
    T__23 = 24
    T__24 = 25
    T__25 = 26
    INTEGER = 27
    B_VALUE = 28
    STRINGCONSTANT = 29
    SYMBOL = 30
    KEYWORD = 31
    Comment = 32
    WS = 33

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "':produce-models'", "':auto-config'", "'('", "'assert'", "')'", 
            "'check-sat'", "'declare-const'", "'declare-fun'", "'define-fun'", 
            "'exit'", "'get-model'", "'set-logic'", "'set-info'", "'set-option'", 
            "'_'", "'as'", "'let'", "'forall'", "'exists'", "'!'", "'error'", 
            "'sat'", "'unsat'", "'timeout'", "'unknown'", "'model'" ]

    symbolicNames = [ "<INVALID>",
            "INTEGER", "B_VALUE", "STRINGCONSTANT", "SYMBOL", "KEYWORD", 
            "Comment", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "T__12", "T__13", 
                  "T__14", "T__15", "T__16", "T__17", "T__18", "T__19", 
                  "T__20", "T__21", "T__22", "T__23", "T__24", "T__25", 
                  "INTEGER", "B_VALUE", "STRINGCONSTANT", "QUOTEESCAPE", 
                  "SYMBOL", "SIMPLE_SYMBOL", "COMPLEX_SYMBOL", "KEYWORD", 
                  "Comment", "WS" ]

    grammarFileName = "SmtLib25.g4"

    def __init__(self, input=None):
        super().__init__(input)
        self.checkVersion("4.5.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


